{"ast":null,"code":"import _classCallCheck from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\src\\\\pages\\\\Favorite.js\";\nimport React, { Component } from \"react\";\nimport { List, ListItem } from \"../components/List\";\nimport \"./style.css\";\nimport API from \"../utils/API\";\nvar count = 0; // var favBook = []\n\nvar Favorite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Favorite, _Component);\n\n  function Favorite() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Favorite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Favorite)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      book: {},\n      showBook: [],\n      showBookState: false\n    };\n\n    _this.favBookDetail = function (id) {\n      count = count + 1;\n\n      _this.loadBooks(id);\n    };\n\n    _this.loadBooks = function () {\n      if (count === 0) {\n        API.getBooks().then(function (res) {\n          return _this.setState({\n            book: res.data,\n            id: \"\",\n            title: \"\",\n            author: \"\",\n            link: \"\",\n            thumbnail: \"\",\n            description: \"\",\n            publisheddate: \"\",\n            note: \"\"\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        }); // console.log({book})\n      } else if (count >= 1) {\n        console.log(\"count is:  \" + count);\n\n        _this.getBook(id);\n      }\n    };\n\n    _this.getBook = function (id) {\n      count = count + 1;\n      API.getBook(id).then(function (res) {\n        return _this.setState({\n          book: res.data,\n          id: \"\",\n          title: \"\",\n          author: \"\",\n          link: \"\",\n          thumbnail: \"\",\n          description: \"\",\n          publisheddate: \"\",\n          note: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Favorite, [{\n    key: \"componentDidMount\",\n    // When the component mounts, get a list of all Favorite books in DB and update this.state.\n    value: function componentDidMount() {\n      console.log(\"count is:  \" + count);\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Favorite Books\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.book.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.book.map(function (book) {\n        return React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"img-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: book.title,\n          width: \"150\",\n          height: \"250\",\n          src: book.thumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Title :\"), \" \", book.title), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Authors :\"), book.author), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Published Date :\"), \" \", book.publishedDate, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"||\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Preview :\"), \" \", React.createElement(\"a\", {\n          href: book.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Link\")))))), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          id: book._id,\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this2.deleteBook(book._id);\n          },\n          className: \"btn btn-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Delete\")), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"  \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          id: book._id,\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this2.favBookDetail(book._id);\n          },\n          className: \"btn btn-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Detail\")), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"  \"));\n      })) : React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"...Loading\")));\n    }\n  }]);\n\n  return Favorite;\n}(Component);\n\nexport default Favorite;","map":{"version":3,"sources":["C:\\BootCamp\\booksearch\\client\\src\\pages\\Favorite.js"],"names":["React","Component","List","ListItem","API","count","Favorite","state","book","showBook","showBookState","favBookDetail","id","loadBooks","getBooks","then","res","setState","data","title","author","link","thumbnail","description","publisheddate","note","catch","err","console","log","getBook","deleteBook","length","map","publishedDate","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { List, ListItem } from \"../components/List\";\nimport \"./style.css\";\nimport API from \"../utils/API\";\n\n\nvar count = 0\n// var favBook = []\nclass Favorite extends Component {\n  state = {\n    book: {},\n    showBook: [],\n    showBookState: false  \n  };\n\n  // When the component mounts, get a list of all Favorite books in DB and update this.state.\n  componentDidMount() {\n    console.log(\"count is:  \" + count);\n    this.loadBooks();\n  }\n\n  favBookDetail = id => {\n    count = count + 1\n    this.loadBooks(id);\n  }\n\n  loadBooks = () => {\n    if (count === 0) {\n      API.getBooks()\n        .then(res => this.setState({ book: res.data, id: \"\", title: \"\", author: \"\", link: \"\", thumbnail: \"\", description: \"\", publisheddate: \"\", note: \"\",}))\n        .catch(err => console.log(err));\n        // console.log({book})\n    }\n    else if (count >= 1) {\n      console.log(\"count is:  \" + count);\n      this.getBook(id);\n    }   \n  };\n\n  getBook = id => {\n    count = count + 1 \n    API.getBook(id)\n      .then(res => this.setState({ book: res.data, id: \"\", title: \"\", author: \"\", link: \"\", thumbnail: \"\", description: \"\", publisheddate: \"\", note: \"\",}))      \n      .catch(err => console.log(err));\n  };\n  \n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n  \n\n  render() {\n    \n    return (\n      <div>\n        <h1 className=\"text-center\">Favorite Books</h1>\n        {/* {!showBookState ? <Favorite book={this.state.book}\n          favBookDetails={this.favBookDetails}\n          // handleFormSubmit={this.handleFormSubmit}\n          favBookDetails={this.favBookDetails}\n          /> : <Favorite showBook={showBook}/>} */}\n        <div>\n          \n          {this.state.book.length ? (\n                <List>\n                  {this.state.book.map(book => (\n                    <ListItem>\n                      <div className=\"card\">\n                        <div className=\"img-container\">\n                        <img\n                          alt={book.title} width=\"150\" height=\"250\"\n                          src={book.thumbnail}\n                        />\n                        </div>\n                        <div className=\"content\">\n                          <ul>\n                            <li>\n                              <b>Title :</b> {book.title}\n                            </li>\n                            <li>\n                              <b>Authors :</b>{book.author}\n                            </li>\n                            <li>\n                              <b>Published Date :</b> {book.publishedDate}<span>||</span><span><b>Preview :</b> <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">Link</a></span>\n                            </li>\n                          </ul>\n                        </div>\n                      </div> \n                      <span><button id={book._id}type=\"submit\" onClick={() => this.deleteBook(book._id)} className=\"btn btn-success\">Delete</button></span><span>  </span>\n                      <span><button id={book._id}type=\"submit\" onClick={() => this.favBookDetail(book._id)} className=\"btn btn-success\">Detail</button></span><span>  </span>\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <h4>...Loading</h4>\n              )}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Favorite;\n"]},"metadata":{},"sourceType":"module"}