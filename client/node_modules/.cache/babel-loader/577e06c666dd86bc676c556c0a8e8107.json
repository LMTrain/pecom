{"ast":null,"code":"import _classCallCheck from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\src\\\\pages\\\\Favorite.js\";\nimport React, { Component } from \"react\"; // import Card from \"../components/Card\";\n\nimport API from \"../utils/API\";\nimport \"./style.css\"; // import { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import SearchResults from \"../components/SearchResults\";\n// import Detail from \"./Detail\";\n\nvar Favorite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Favorite, _Component);\n\n  function Favorite() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Favorite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Favorite)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        console.log('LOADBOOKS', res);\n\n        _this.setState({\n          books: res.data,\n          id: \"\",\n          title: \"\",\n          author: \"\",\n          link: \"\",\n          thumbnail: \"\",\n          description: \"\",\n          publisheddate: \"\",\n          note: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Favorite, [{\n    key: \"componentDidMount\",\n    // When the component mounts, get a list of all Favorite books in DB and update this.state.\n    value: function componentDidMount() {\n      this.loadBooks();\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    // deleteBook = id => {\n    //   API.deleteBook(id)\n    //     .then(res => this.loadBooks())\n    //     .catch(err => console.log(err));\n    // };\n    // favoriteSubmit = event => {\n    //   event.preventDefault();\n    //   API.saveBook({\n    //     title: this.state.result.volumeInfo.title,\n    //     authors: this.state.result.volumeInfo.authors,\n    //     link: this.state.result.volumeInfo.infoLink,\n    //     thumbnail: this.state.result.volumeInfo.imageLinks.thumbnail,\n    //     description: this.state.result.volumeInfo.description,\n    //     publisheddate: this.state.result.volumeInfo.publishedDate,\n    //   })\n    //     .then(res => this.loadBooks())\n    //     .catch(err => console.log(err));\n    // };\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Favorite Books\"), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"List of my favorite books!\"), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, book.title, \" by \", book.author)));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"No Results to Display\"));\n    }\n  }]);\n\n  return Favorite;\n}(Component);\n\nexport default Favorite;","map":{"version":3,"sources":["C:\\BootCamp\\booksearch\\client\\src\\pages\\Favorite.js"],"names":["React","Component","API","Favorite","state","books","loadBooks","getBooks","then","res","console","log","setState","data","id","title","author","link","thumbnail","description","publisheddate","note","catch","err","length","map","book","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,aAAP,C,CACA;AACA;AACA;AACA;AACA;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAWRC,S,GAAY,YAAM;AAChBJ,MAAAA,GAAG,CAACK,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;;AACA,cAAKG,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEI,GAAG,CAACI,IAAb;AAAmBC,UAAAA,EAAE,EAAE,EAAvB;AAA2BC,UAAAA,KAAK,EAAE,EAAlC;AAAsCC,UAAAA,MAAM,EAAE,EAA9C;AAAkDC,UAAAA,IAAI,EAAE,EAAxD;AAA4DC,UAAAA,SAAS,EAAE,EAAvE;AAA2EC,UAAAA,WAAW,EAAE,EAAxF;AAA4FC,UAAAA,aAAa,EAAE,EAA3G;AAA+GC,UAAAA,IAAI,EAAE;AAArH,SAAd;AACD,OAJH,EAMGC,KANH,CAMS,UAAAC,GAAG;AAAA,eAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAAJ;AAAA,OANZ;AAOD,K;;;;;;;AAdD;wCACoB;AAClB,WAAKjB,SAAL;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACD;;;AAYD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;6BAES;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,EAKG,KAAKA,KAAL,CAAWC,KAAX,CAAiBmB,MAAjB,GACK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKpB,KAAL,CAAWC,KAAX,CAAiBoB,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,YAAYD,IAAI,CAACC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACX,KADR,UACmBW,IAAI,CAACV,MADxB,CADF,CADF,CADwB;AAAA,OAAzB,CADH,CADL,GAcK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAnBR,CADF;AAyBD;;;;EAtEoBf,S;;AAyEvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from \"react\";\n// import Card from \"../components/Card\";\nimport API from \"../utils/API\";\nimport \"./style.css\";\n// import { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import SearchResults from \"../components/SearchResults\";\n// import Detail from \"./Detail\";\n\nclass Favorite extends Component {\n  state = {\n    books: [],\n    \n  };\n\n  // When the component mounts, get a list of all Favorite books in DB and update this.state.\n  componentDidMount() {\n    this.loadBooks();    \n    console.log(this.state);\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res => {\n        console.log('LOADBOOKS', res)\n        this.setState({ books: res.data, id: \"\", title: \"\", author: \"\", link: \"\", thumbnail: \"\", description: \"\", publisheddate: \"\", note: \"\",})\n      }\n      )\n      .catch(err => console.log(err));\n  };\n\n  // deleteBook = id => {\n  //   API.deleteBook(id)\n  //     .then(res => this.loadBooks())\n  //     .catch(err => console.log(err));\n  // };\n\n  // favoriteSubmit = event => {\n  //   event.preventDefault();\n  //   API.saveBook({\n  //     title: this.state.result.volumeInfo.title,\n  //     authors: this.state.result.volumeInfo.authors,\n  //     link: this.state.result.volumeInfo.infoLink,\n  //     thumbnail: this.state.result.volumeInfo.imageLinks.thumbnail,\n  //     description: this.state.result.volumeInfo.description,\n  //     publisheddate: this.state.result.volumeInfo.publishedDate,\n\n  //   })\n  //     .then(res => this.loadBooks())\n  //     .catch(err => console.log(err));\n\n  // };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">Favorite Books</h1>\n        <h3 className=\"text-center\">\n          List of my favorite books!\n        </h3>\n        {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </Link>\n                    {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n        \n      </div>\n    );\n  }\n}\n\nexport default Favorite;\n"]},"metadata":{},"sourceType":"module"}