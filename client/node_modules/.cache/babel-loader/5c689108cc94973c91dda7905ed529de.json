{"ast":null,"code":"import _toConsumableArray from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\src\\\\pages\\\\Favorite.js\";\nimport React, { Component } from \"react\"; // import API from \"../utils/API\";\n\nimport Card from \"../components/Card\";\nimport favBooks from \"../pages/favBooks.json\";\nvar shuffleBook = \" \";\nvar shuffledBooks = [];\n\nvar Favorite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Favorite, _Component);\n\n  function Favorite() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Favorite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Favorite)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      favBooks: favBooks\n    };\n\n    _this.loadNextBook = function () {\n      var booksArray = _toConsumableArray(_this.state.favBooks);\n\n      var booksShuffled = [];\n\n      for (var i = 0; i < _this.state.favBooks.length; i++) {\n        shuffleBook = booksArray.splice(Math.floor(Math.random() * booksArray.length), 1);\n        booksShuffled = [].concat(_toConsumableArray(booksShuffled), _toConsumableArray(shuffleBook));\n      }\n\n      shuffledBooks.push(_this.state.favBooks);\n\n      _this.setState({\n        favBooks: booksShuffled\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Favorite, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load the next dog to be displayed\n    value: function componentDidMount() {\n      this.loadNextBook();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Favorite Books\"), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"List of my favorite books!\"), this.state.favBooks.map(function (book) {\n        return React.createElement(Card, {\n          id: book.id,\n          key: book.id,\n          name: book.name,\n          image: book.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Favorite;\n}(Component);\n\nexport default Favorite;","map":{"version":3,"sources":["C:\\BootCamp\\booksearch\\client\\src\\pages\\Favorite.js"],"names":["React","Component","Card","favBooks","shuffleBook","shuffledBooks","Favorite","state","loadNextBook","booksArray","booksShuffled","i","length","splice","Math","floor","random","push","setState","map","book","id","name","image"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,IAAIC,WAAW,GAAG,GAAlB;AACA,IAAIC,aAAa,GAAG,EAApB;;IACMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNJ,MAAAA,QAAQ,EAARA;AADM,K;;UASRK,Y,GAAe,YAAM;AACnB,UAAIC,UAAU,sBAAO,MAAKF,KAAL,CAAWJ,QAAlB,CAAd;;AACA,UAAIO,aAAa,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAG,MAAKJ,KAAL,CAAWJ,QAAX,CAAoBS,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AAClDP,QAAAA,WAAW,GAAGK,UAAU,CAACI,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcP,UAAU,CAACG,MAApC,CAAlB,EAA8D,CAA9D,CAAd;AACAF,QAAAA,aAAa,gCAAOA,aAAP,sBAAyBN,WAAzB,EAAb;AAED;;AACHC,MAAAA,aAAa,CAACY,IAAd,CAAmB,MAAKV,KAAL,CAAWJ,QAA9B;;AAEF,YAAKe,QAAL,CAAc;AAAEf,QAAAA,QAAQ,EAAEO;AAAZ,OAAd;AACD,K;;;;;;;AAhBC;wCACoB;AAClB,WAAKF,YAAL;AACD;;;6BAeQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,EAKG,KAAKD,KAAL,CAAWJ,QAAX,CAAoBgB,GAApB,CAAwB,UAAAC,IAAI;AAAA,eAExB,oBAAC,IAAD;AACA,UAAA,EAAE,EAAEA,IAAI,CAACC,EADT;AAEA,UAAA,GAAG,EAAED,IAAI,CAACC,EAFV;AAGA,UAAA,IAAI,EAAED,IAAI,CAACE,IAHX;AAIA,UAAA,KAAK,EAAEF,IAAI,CAACG,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFwB;AAAA,OAA5B,CALH,CADF;AAiBD;;;;EAzCoBtB,S;;AA4CvB,eAAeK,QAAf","sourcesContent":["import React, { Component } from \"react\";\n// import API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport favBooks from \"../pages/favBooks.json\";\n\nvar shuffleBook = \" \"\nvar shuffledBooks = []\nclass Favorite extends Component {\n  state = {\n    favBooks\n  };\n\n  // When the component mounts, load the next dog to be displayed\n  componentDidMount() {\n    this.loadNextBook();\n  }  \n\n  loadNextBook = () => {\n    let booksArray = [...this.state.favBooks];\n    let booksShuffled = [];\n    for (var i = 0;  i < this.state.favBooks.length; i++) {        \n        shuffleBook = booksArray.splice(Math.floor(Math.random()*booksArray.length),1);        \n        booksShuffled = [...booksShuffled, ...shuffleBook];\n                \n      }   \n    shuffledBooks.push(this.state.favBooks);\n    \n  this.setState({ favBooks: booksShuffled });  \n};\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">Favorite Books</h1>\n        <h3 className=\"text-center\">\n          List of my favorite books!\n        </h3>\n        {this.state.favBooks.map(book => (\n             \n             <Card             \n             id={book.id}\n             key={book.id}\n             name={book.name}\n             image={book.image}            \n             />\n           ))}         \n      </div>\n    );\n  }\n}\n\nexport default Favorite;\n"]},"metadata":{},"sourceType":"module"}