{"ast":null,"code":"var _jsxFileName = \"C:\\\\BootCamp\\\\booksearch\\\\client\\\\src\\\\components\\\\SearchForm\\\\index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(props) {\n  return React.createElement(\"body\", {\n    backgroundImage: \"https://lmtrain.github.io/lm-images/assets/images/books6.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Book Name:\"), React.createElement(\"input\", {\n    value: props.search,\n    onChange: props.handleInputChange,\n    name: \"search\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Type in a book title\",\n    id: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: props.handleFormSubmit,\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Search\"))));\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["C:\\BootCamp\\booksearch\\client\\src\\components\\SearchForm\\index.js"],"names":["React","SearchForm","props","search","handleInputChange","handleFormSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SACE;AAAM,IAAA,eAAe,EAAC,8DAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,MADf;AAEE,IAAA,QAAQ,EAAED,KAAK,CAACE,iBAFlB;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC,sBANd;AAOE,IAAA,EAAE,EAAC,QAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEF,KAAK,CAACG,gBAArC;AAAuD,IAAA,SAAS,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF,CAFF,CADF;AAsBD;;AAED,eAAeJ,UAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <body backgroundImage=\"https://lmtrain.github.io/lm-images/assets/images/books6.jpg\">\n\n      <form className=\"search\">\n        <div className=\"form-group\">\n          <label htmlFor=\"search\">Book Name:</label>\n          <input\n            value={props.search}\n            onChange={props.handleInputChange}\n            name=\"search\"          \n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Type in a book title\"\n            id=\"search\"\n          />        \n          <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n            Search\n          </button>\n        </div>\n      </form>\n    </body>\n  );\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}